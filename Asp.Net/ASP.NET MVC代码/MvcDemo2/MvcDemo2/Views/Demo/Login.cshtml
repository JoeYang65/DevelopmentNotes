@model MvcDemo2.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>

@* Html的form标签，根据LoginViewModel自动生成登录页面的表单，下面大括号内都是表单里的内容 *@
@using (Html.BeginForm()) 
{
    @*防伪唯一标识，避免页面在客户端被修改或伪造页面，所以可在服务器Controller校验这个防伪令牌*@
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LoginViewModel</h4>
        <hr />
        @* 提交后服务器返回的错误信息概要，累计显示 *@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @* Html的label标签，显示LoginViewModel的Display.Name，htmlAttributes写标签的属性 *@
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2",title="自定义鼠标提示" })
            <div class="col-md-10">
                @* Html的input标签，输入框 *@
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @* Html的span标签，校验的错误消息提示 *@
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*由于使用Create模板自动生成的html页面，所以默认显示Create，可自己改*@
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
